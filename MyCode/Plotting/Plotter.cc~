// C++
#include <iostream>
#include <vector>
#include <set>
#include <cmath>
#include <sstream>
#include <stdexcept>

// ROOT
#include "TDirectory.h"
#include "TTreeCache.h"
#include "Math/VectorUtil.h"
#include "TVector2.h"
#include "TBenchmark.h"
#include "TMath.h"
#include "TLorentzVector.h"
#include "TH1.h"
#include "TH2.h"
#include "TCanvas.h"
#include "TFile.h"

//#include "RooRealVar.h"
//#include "RooDataSet.h"

// Tools
#include "../../CORE/Tools/utils.h"

using namespace std;

int main ()
{
  vector<string> file_list;
  file_list.push_back("dyjets");
  file_list.push_back("qcd"); 
  file_list.push_back("singletop");
  file_list.push_back("ttdl");
  file_list.push_back("ttg");
  file_list.push_back("tth");
  file_list.push_back("ttsl");
  file_list.push_back("tttt");
  file_list.push_back("ttw");
  file_list.push_back("ttz");
  file_list.push_back("twz");
  file_list.push_back("wjets");
  file_list.push_back("ww");
  file_list.push_back("zinv");

  TCanvas * c1 = new TCanvas();
  c1->SetLogy();
  c1->cd();

  for (vector<string>::iterator it = file_list.begin(); it != file_list.end(); ++it)
    {
      string file_name = *it;
      TFile * current_file = TFile::Open( ("../output/Unskimmed/"+file_name+".root").c_str() );

      TIter next(current_file->GetList()); 
      TObject *obj; 
      while ((obj=next())) 
	{ 
	  if (obj->InheritsFrom("TH1")) 
	    { 
	      TH1 *h = (TH1*)obj; 
	      string name = h->GetName();
	      h->SetFillColor(kRed);
	      h->Draw("hist");
	      h->Draw("Esame");
	      c1->Print((name+".pdf").c_str());
	    } 
	}
    }

}
